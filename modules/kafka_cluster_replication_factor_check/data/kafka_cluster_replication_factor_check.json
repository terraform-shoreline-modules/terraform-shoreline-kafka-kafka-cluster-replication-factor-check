{
  "name": "kafka_cluster_replication_factor_check",
  "description": "In a Kafka cluster, replication factor is the number of copies of a topic's partitions across different brokers. The replication factor is set at the time of topic creation and cannot be changed once the topic is created. In case the replication factor is less than the minimum required number, there is a risk of data loss if one or more brokers go down. This incident type involves checking the replication factor of Kafka clusters to ensure that the number of replicas is sufficient, and that data is safe in case of a broker failure.",
  "params": [
    {
      "name": "ZOOKEEPER_HOST",
      "value": ""
    },
    {
      "name": "TOPIC_NAME",
      "value": ""
    },
    {
      "name": "REPLICATION_FACTOR",
      "value": ""
    },
    {
      "name": "PATH_TO_KAFKA_HOME",
      "value": ""
    },
    {
      "name": "ZOOKEEPER_PORT",
      "value": ""
    },
    {
      "name": "HOST_NAME",
      "value": ""
    },
    {
      "name": "K8S_CLUSTER_NAME",
      "value": ""
    },
    {
      "name": "NAMESPACE",
      "value": ""
    }
  ],
  "cells": [
    {
      "name": "cell_1",
      "type": "MARKDOWN",
      "enabled": true,
      "content": "## Kafka Cluster Replication Factor Check\nIn a Kafka cluster, replication factor is the number of copies of a topic's partitions across different brokers. The replication factor is set at the time of topic creation and cannot be changed once the topic is created. In case the replication factor is less than the minimum required number, there is a risk of data loss if one or more brokers go down. This incident type involves checking the replication factor of Kafka clusters to ensure that the number of replicas is sufficient, and that data is safe in case of a broker failure."
    },
    {
      "name": "cell_2",
      "type": "MARKDOWN",
      "enabled": true,
      "content": "## Check the replication factor of a specific topic"
    },
    {
      "name": "cell_3",
      "type": "OP_LANG",
      "enabled": true,
      "content": "(host | host_name=$HOST_NAME) union (pod | k8s_cluster_name=$K8S_CLUSTER_NAME | namespace=$NAMESPACE) | `kafka-topics.sh --zookeeper ${ZOOKEEPER_HOST}:${ZOOKEEPER_PORT} --describe --topic ${TOPIC_NAME}`"
    },
    {
      "name": "cell_4",
      "type": "MARKDOWN",
      "enabled": true,
      "content": "## Check the replication factor of all topics in a cluster"
    },
    {
      "name": "cell_5",
      "type": "OP_LANG",
      "enabled": true,
      "content": "(host | host_name=$HOST_NAME) union (pod | k8s_cluster_name=$K8S_CLUSTER_NAME | namespace=$NAMESPACE) | `kafka-topics.sh --zookeeper ${ZOOKEEPER_HOST}:${ZOOKEEPER_PORT} --list | xargs -n1 kafka-topics.sh --zookeeper ${ZOOKEEPER_HOST}:${ZOOKEEPER_PORT} --describe --topic`"
    },
    {
      "name": "cell_6",
      "type": "MARKDOWN",
      "enabled": true,
      "content": "## Check the number of brokers in a cluster"
    },
    {
      "name": "cell_7",
      "type": "OP_LANG",
      "enabled": true,
      "content": "(host | host_name=$HOST_NAME) union (pod | k8s_cluster_name=$K8S_CLUSTER_NAME | namespace=$NAMESPACE) | `zookeeper-shell.sh ${ZOOKEEPER_HOST}:${ZOOKEEPER_PORT} ls /brokers/ids | grep '\\[' | awk -F'[][]' '{print $2}' | wc -l`"
    },
    {
      "name": "cell_8",
      "type": "MARKDOWN",
      "enabled": true,
      "content": "## Check the number of replicas of a topic's partitions"
    },
    {
      "name": "cell_9",
      "type": "OP_LANG",
      "enabled": true,
      "content": "(host | host_name=$HOST_NAME) union (pod | k8s_cluster_name=$K8S_CLUSTER_NAME | namespace=$NAMESPACE) | `kafka-topics.sh --zookeeper ${ZOOKEEPER_HOST}:${ZOOKEEPER_PORT} --describe --topic ${TOPIC_NAME} | grep -i replica`"
    },
    {
      "name": "cell_10",
      "type": "MARKDOWN",
      "enabled": true,
      "content": "## Check the number of in-sync replicas of a topic's partitions"
    },
    {
      "name": "cell_11",
      "type": "OP_LANG",
      "enabled": true,
      "content": "(host | host_name=$HOST_NAME) union (pod | k8s_cluster_name=$K8S_CLUSTER_NAME | namespace=$NAMESPACE) | `kafka-topics.sh --zookeeper ${ZOOKEEPER_HOST}:${ZOOKEEPER_PORT} --describe --topic ${TOPIC_NAME} | grep -i isr`"
    },
    {
      "name": "cell_12",
      "type": "MARKDOWN",
      "enabled": true,
      "content": "## Increase the replication factor of the topic so that it meets the minimum required number. This can be done using the Kafka command line tools or the Kafka API."
    },
    {
      "name": "cell_13",
      "type": "OP_LANG",
      "enabled": true,
      "content": "host | host_name=$HOST_NAME | invoke_increase_replication_factor($ZOOKEEPER_HOST, $TOPIC_NAME, $REPLICATION_FACTOR, $PATH_TO_KAFKA_HOME, $ZOOKEEPER_PORT)"
    }
  ]
}